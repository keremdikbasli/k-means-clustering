# K-means Kümeleme
#1st Objective: k-means Kümeleme
#Created by: Kerem Dikbaşlı
# 27/12/22
#####################

###### Step 1: Çalışma alanını belirleme ######
setwd("C:/Users/")

# Kütüphaneleri çıkartma
library(readxl)
library(dplyr)
library(fpc)
library(MASS)
library(caret)
library(flexclust)
library(NbClust)

# Veriyi okutma
library(readxl)
Whitewine <- read_excel("C:/Users/kerem/Whitewine.xlsx")
View(Whitewine)


original <- Whitewine
boxplot(original)

####Step 2: Aykırı Değer Ayıklama #####

# Özetleyici İstatistikler

original_summary <- summary(original$`residual sugar`)
original_summary

# IQR bulma işlemi
# Q3-Q1
iqr <- original_summary[[5]] - original_summary[[2]]


# Güven aralıkları
lower_bound <- original_summary[[2]] - (1.5 * iqr)
upper_bound <- original_summary[[5]] + (1.5 * iqr)

# Aykırı değerleri bulma işlemi
outliers <- original %>% 
  filter( `residual sugar`> upper_bound | `residual sugar`< lower_bound)

# Aykırı değerlerin df'den çıkarılması
no_outliers <- original %>%
  filter(`residual sugar` < upper_bound & `residual sugar` > lower_bound)

####
original_summary <- summary(original$`free sulfur dioxide`)
iqr <- original_summary[[5]] - original_summary[[2]]

# Güven aralıklarını bulalım.
lower_bound <- original_summary[[2]] - (1.5 * iqr)
upper_bound <- original_summary[[5]] + (1.5 * iqr)


outliers <- rbind(outliers,original %>% 
                    filter(`free sulfur dioxide` > upper_bound | `free sulfur dioxide` < lower_bound))

no_outliers <- no_outliers %>%
  filter(`free sulfur dioxide` < upper_bound & `free sulfur dioxide` > lower_bound)

# Repeat for fixed accidity
original_summary <- summary(original$`total sulfur dioxide`)
iqr <- original_summary[[5]] - original_summary[[2]]
# Remember that the bounds are based on the original data
lower_bound <- original_summary[[2]] - (1.5 * iqr)
upper_bound <- original_summary[[5]] + (1.5 * iqr)

# no_outliers değişkeninde aykırı değerleri ayıklama 
outliers <- rbind(outliers,original %>% 
                    filter(`total sulfur dioxide` > upper_bound | `total sulfur dioxide` < lower_bound))

no_outliers <- no_outliers %>%
  filter(`total sulfur dioxide` < upper_bound & `total sulfur dioxide` > lower_bound)

boxplot(no_outliers)

# Normalleştirme İşlemi 
wine_stand<- scale(no_outliers[-12])
summary(wine_stand)


#NbClust() 
set.seed(1234)
nc <- NbClust(wine_stand,
              min.nc=2, max.nc=8,
              method="kmeans")

barplot(table(nc$Best.n[1,]),
        xlab="Numer of Clusters",
        ylab="Number of Criteria",
        main="Number of Clusters Chosen by 9 Criteria")

ws <- 0
for (i in 1:9){
  ws[i] <-
    sum(kmeans(wine_stand, centers=i)$withinss)}

plot(1:9,
     ws,
     type="b",    
     xlab="Number of Clusters",
     ylab="Within groups sum of squares")

# kmeans=2

fit.km2 <- kmeans(wine_stand,2)
plotcluster(wine_stand, fit.km2$cluster)

# k=2 için İnceleme

confuse <- table(no_outliers$quality,fit.km2$cluster)
confuse

# MASS plot

parcoord(wine_stand, fit.km2$cluster)

# kmeans=3

fit.km3 <- kmeans(wine_stand , 3)
fit.km3

# k=3 İnceleme
confuse3 <- table(no_outliers$quality,fit.km3$cluster)
confuse3

# kmeans=4

fit.km4 <- kmeans(wine_stand, 4)

# k=4 İnceleme

table(no_outliers$quality,fit.km4$cluster)

# kmeans=5

fit.km5 <- kmeans(wine_stand, 5)

# k=5 için İnceleme

table(no_outliers$quality,fit.km5$cluster)
plotcluster(wine_stand,fit.km5$cluster)

# k=2 için ARI incelemesi

randIndex(confuse)

# NbClust() ile Manhattan Uzaklığı Hesabı

clusters_manhattan <- NbClust(wine_stand,distance="manhattan",min.nc=2,max.nc=5,method="kmeans",index="all")                               

